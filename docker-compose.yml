services:
  db:
    image: postgres:latest
    container_name: db
    expose: [ '5432' ]
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglogs:/var/log/postgresql
    
  app:
    image: security-advisory:latest
    build: .
    expose: [ '5000' ]
    container_name: app
    entrypoint: gunicorn wsgi:application --bind 0.0.0.0:5000
    healthcheck:
      test: curl --fail http://localhost:5000/admin || exit 1
      interval: 2s
      timeout: 10s
      retries: 10
    env_file: .env
    depends_on: 
      db:
        condition: service_healthy
        required: true

  nginx:
    image: nginx:latest
    container_name: nginx
    ports: [ '8000:80' ]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - logs:/var/log/nginx
    depends_on: 
      app:
        condition: service_healthy
        required: true
    
volumes:
  logs:
  pgdata:
  pglogs: